[project]
name = "app"
version = "0.1.0"
description = ""
authors = [
    {name = "Okafor Z."}
]
license = {text = "MIT, COZN"}
requires-python = ">=3.13"
dependencies = [
    "langchain>=0.3.22",
    "langchain-openai>=0.3.11",
    "langgraph>=0.3.21",
    "langgraph-checkpoint-postgres>=2.0.19",
    "pydantic[email]>=2.11.1",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.1.0",
    "python-jose[cryptography]>=3.4.0",
    "python-multipart>=0.0.20",
    "prometheus-client>=0.19.0",
    "starlette-prometheus>=0.7.0",
    "duckduckgo-search>=3.9.0",
    "langchain-community>=0.3.20",
    "tqdm>=4.67.1",
    "langchain-mcp-adapters==0.0.9",
    "boto3==1.38.8",
    "playwright==1.52.0",
    "celery==5.5.2",
    "Jinja2==3.1.6",
    "django>=5.1.0",
    "djangorestframework>=3.15.0",
    "django-cors-headers>=4.4.0",
    "django-environ>=0.11.0",
    "gunicorn>=23.0.0",
    "psycopg2-binary>=2.9.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.0",
    "redis>=4.5.1",
    "openpyxl==3.1.5",
    "playwright-stealth==2.0.0",
    "beautifulsoup4==4.13.4"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "flake8",
    "ruff",
    "djlint==1.36.4",
]

[dependency-groups]
test = [
    "httpx>=0.28.1",
    "pytest>=8.3.5",
]

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
python_files = ["test_*.py", "*_test.py", "tests.py"]

[tool.black]
line-length = 119
exclude = "venv|migrations"

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100"]
exclude = "venv|migrations"
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119
skip = ["migrations", "venv"]

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
]

[tool.pylint.master]
ignore = "migrations"

[tool.ruff]
line-length = 119
exclude = ["migrations", "*.ipynb", "venv"]

[tool.ruff.lint]
# Enable flake8-bugbear (`B`) rules and docstring (`D`) rules
select = ["E", "F", "B", "ERA", "D"]
# Never enforce `E501` (line length violations).
ignore = ["E501", "F401", "D203", "D213","B904","B008"]
# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# Ignore `E402` (import violations) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
